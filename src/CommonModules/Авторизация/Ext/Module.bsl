Функция ПолучитьКуки(Запрос) Экспорт
	Куки   = Новый Соответствие();
	Заголовок = Запрос.Заголовки.Получить("Cookie");
	Если Заголовок = Неопределено Тогда
		Возврат Куки;
	КонецЕсли; 
	Массив = СтрРазделить(Заголовок, ";");
	Для каждого Элемент Из Массив Цикл
		КлЗнч = СтрРазделить(Элемент, "=", Ложь);
		Если КлЗнч.Количество() = 2 Тогда
			Куки.Вставить(СокрЛ(КлЗнч[0]), КлЗнч[1]);
		КонецЕсли; 
	КонецЦикла;
	Возврат Куки;	
КонецФункции

//  Состояние: Новый, НеАвторизован, Авторизован, Аутентифицирован
Функция ПолучитьПараметрыКлиента(Запрос, Куки = Неопределено) Экспорт
	Если Не ЗначениеЗаполнено(Куки) Тогда
		Куки = ПолучитьКуки(Запрос);
	КонецЕсли; 
	ПараметрыКлиента = Неопределено;
	ИдСессии = Куки["SessionId"];
	Если ЗначениеЗаполнено(ИдСессии) Тогда
		Клиенты = ПараметрыСеанса.Клиенты.Получить();
		ПараметрыКлиента = ИдСессии;
		Пока ТипЗнч(ПараметрыКлиента) = Тип("Строка") Цикл
			// Поиск по изменившимся значениям
			ПараметрыКлиента = Клиенты[ПараметрыКлиента];
		КонецЦикла; 
		Если Не ЗначениеЗаполнено(ПараметрыКлиента) Тогда
			ПараметрыКлиента = Новый Структура("Сообщения,Ид,Состояние,ДатаОкончания,Пользователь", Новый Массив());
			ПараметрыКлиента.Ид = Новый УникальныйИдентификатор(ИдСессии);
			Если ЭтоКонтрагент(ПараметрыКлиента) Тогда 
				ПараметрыКлиента.Состояние = "Авторизован";
			Иначе
				ПараметрыКлиента.Состояние = "НеАвторизован";
			КонецЕсли; 
		КонецЕсли; 
	Иначе 
		ПараметрыКлиента = Новый Структура("Сообщения,Ид,Состояние,ДатаОкончания,Пользователь", Новый Массив());
		ПараметрыКлиента.Ид =  Новый УникальныйИдентификатор();
		ПараметрыКлиента.Состояние = "НеАвторизован"
	КонецЕсли;
	// ПараметрыКлиента.ДатаОкончания = ТекущаяДата() + 3600;
	Возврат ПараметрыКлиента;	
КонецФункции

Функция ЗаписатьПараметрыКлиента(ПараметрыКлиента) Экспорт
	Ид = Строка(ПараметрыКлиента.Ид);
	ТекущиеКлиенты = ПараметрыСеанса.Клиенты.Получить();
	Если ТекущиеКлиенты[Ид] = Неопределено Тогда
		ТекущиеКлиенты.Вставить(Ид, ПараметрыКлиента);
	Иначе
		ТекущиеКлиенты[Ид] = ПараметрыКлиента;
	КонецЕсли; 
	ПараметрыСеанса.Клиенты = Новый ХранилищеЗначения(ТекущиеКлиенты);
КонецФункции

Функция ПараметрыКлиентаВОтвет(ПараметрыКлиента, Ответ) Экспорт
	//"Set-Cookie: SessionId=GUID; Expires=Wed, 21 Oct 2015 07:28:00 GMT; HttpOnly"
	//Дата = Формат(УниверсальноеВремя(ПараметрыКлиента.ДатаОкончания),"Л=en_US; ДФ='ддд, дд МММ гггг ЧЧ:мм:сс '");
	
	ТекстКуки = "SessionId=" + ПараметрыКлиента.Ид + "; HttpOnly";
	// Вход на 10 минут бездействия
	// ТекстКуки = ТекстКуки + "; max-age=600";
	Ответ.Заголовки.Вставить("Set-Cookie", ТекстКуки);
	ЗаписатьПараметрыКлиента(ПараметрыКлиента);
КонецФункции

Функция Авторизовать(ПараметрыКлиента, Пользователь, Пароль) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Сотрудники.Наименование КАК Наименование,
		|	Сотрудники.ИнтернетИмя КАК ИнтернетИмя,
		|	Сотрудники.ИнтернетПароль КАК ИнтернетПароль,
		|	Сотрудники.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Сотрудники КАК Сотрудники
		|ГДЕ
		|	Сотрудники.ИнтернетИмя = &ИнтернетИмя
		|	И Сотрудники.ИнтернетПароль = &ИнтернетПароль";
	Запрос.УстановитьПараметр("ИнтернетИмя", Пользователь);
	Запрос.УстановитьПараметр("ИнтернетПароль", Пароль);
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка   = РезультатЗапроса.Выбрать();
	Сообщение = "";
	Данные    = "";
	Если Выборка.Следующий() Тогда
		Контрагент = Неопределено;
		//Если Выборка.ИнтернетПароль = "" Тогда
		//	Контрагент = Выборка.Ссылка.ПолучитьОбъект();
		//	Контрагент.ИнтернетПароль = Пароль;
		//	Контрагент.Записать();
		//КонецЕсли; 
	    Если Выборка.ИнтернетПароль = Пароль Тогда
	    	ИзменитьИд(ПараметрыКлиента, Строка(Выборка.Ссылка.УникальныйИдентификатор()));
			ПараметрыКлиента.Состояние = "Аутентифицирован";
			ПараметрыКлиента.Пользователь = Выборка.Наименование;
		Иначе
			Данные    = "password"; 
			Сообщение = "Введён неправильный пароль!";
		КонецЕсли;
	Иначе
		Данные    = "user"; 
		Сообщение = "Такого пользователя не существует"; 
	КонецЕсли;
	Если ЗначениеЗаполнено(Данные) Тогда
		Возврат """" + Данные + """:""" + Сообщение + """";
	КонецЕсли; 
	Возврат "";    		
КонецФункции
 
Функция ЭтоКонтрагент(ПараметрыКлиента, Ссылка = Неопределено)
	Ссылка = Справочники.Контрагенты.ПолучитьСсылку(ПараметрыКлиента.Ид);
	Объект = Ссылка.ПолучитьОбъект();
	Если Объект <> Неопределено Тогда
		ПараметрыКлиента.Пользователь = Объект.Наименование;
		Возврат Истина;
	КонецЕсли;
	Возврат Ложь; 
КонецФункции

Процедура Выход(ПараметрыКлиента) Экспорт
	Если ПараметрыКлиента.Состояние = "Аутентифицирован" Тогда
		ПараметрыКлиента.Состояние = "Авторизован";
	КонецЕсли; 	
КонецПроцедуры
 
Процедура ИзменитьИд(ПараметрыКлиента, НовыйИд)
	Клиенты = ПараметрыСеанса.Клиенты.Получить();
	Клиенты[Строка(ПараметрыКлиента.Ид)] = НовыйИд;
	
	ПараметрыКлиента.Ид = НовыйИд;
	
	Клиенты.Вставить(Строка(НовыйИд), ПараметрыКлиента);
	ПараметрыСеанса.Клиенты = Новый ХранилищеЗначения(Клиенты);
КонецПроцедуры