
&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	ВалютаРубль = Справочники.Валюты.Рубль;
	Валюта = ТекущийОбъект.СчетОрганизации.ВалютаСчета;
    Если Валюта <> ВалютаРубль И Валюта <> Справочники.Валюты.ПустаяСсылка() Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	1 КАК Поле
			|ИЗ
			|	РегистрСведений.КурсыВалют.СрезПоследних(, Валюта = &Валюта) КАК КурсыВалютСрезПоследних";
		Запрос.УстановитьПараметр("Валюта", Валюта);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Количество() = 0 Тогда
			Отказ = Истина;
			Сообщить("Не определён курс Рубль-" 
			 		+ Валюта 
			 		+ " для счета " 
			 		+ Объект.СчетОрганизации);
		КонецЕсли; 
	КонецЕсли;  
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСуммуЗаказаНаСервере(Заказ)
	Если Заказ = Документы.ЗаказКлиента.ПустаяСсылка() Тогда
		Возврат 0;
	КонецЕсли; 
	Возврат Заказ.ПолучитьОбъект().ОбщаяСтоимость;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьВалютуПоСчетуОрганизацииНаСервере(Счет)
	Если Счет = Справочники.СчетаОрганизации.ПустаяСсылка() Тогда
		Возврат Справочники.Валюты.ПустаяСсылка();
	КонецЕсли; 
	Возврат Счет.ПолучитьОбъект().ВалютаСчета;
КонецФункции

&НаСервереБезКонтекста
Функция ПересчитатьСуммуНаСервере(Знач Сумма, Знач ВалютаИлиМассив, Дата = Неопределено)
	Курсы = Новый Массив(2);
	
	Если ТипЗнч(ВалютаИлиМассив) = Тип("СправочникСсылка.Валюты") Тогда
		Курсы[0] = 1;
		Валюты = Новый Массив(2);
		Валюты[1] = ВалютаИлиМассив;
	Иначе //  Если ТипЗнч(ВалютаИлиМассив) = Тип("Массив") Тогда
		Валюты = ВалютаИлиМассив;
	КонецЕсли; 
	
	//  Если валюта не заполнена (по умолчанию рубль) или это рубль, Курс = 1
	Индекс = 0;
	Пока Индекс < Валюты.Количество() Цикл
		Если Валюты[Индекс] = Справочники.Валюты.Рубль 
			ИЛИ Валюты[Индекс] = Неопределено
			ИЛИ Валюты[Индекс] = Справочники.Валюты.ПустаяСсылка() Тогда
			
			Курсы[Индекс] = 1;
			Валюты[Индекс] = Неопределено;
		КонецЕсли;
		Индекс = Индекс + 1; 
	КонецЦикла; 
    //  Получаем последние курсы
	Если Валюты.Количество() > 0 Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	КурсыВалютСрезПоследних.Курс КАК Курс,
			|	КурсыВалютСрезПоследних.Валюта КАК Валюта
			|ИЗ
			|	РегистрСведений.КурсыВалют.СрезПоследних(, Валюта В (&Валюты)) КАК КурсыВалютСрезПоследних";
		
		Если Дата <> Неопределено Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст
				, "СрезПоследних("
				, "СрезПоследних(&Дата");
			Запрос.УстановитьПараметр("Дата", Дата);
		КонецЕсли; 
		Запрос.УстановитьПараметр("Валюты", Валюты);
		
		Выборка = Запрос.Выполнить().Выбрать();

		Пока Выборка.Следующий() Цикл
			Для Индекс = 0 По Валюты.ВГраница() Цикл
				Если Валюты[Индекс] = Выборка.Валюта Тогда
					Курсы[Индекс] = Выборка.Курс;
				КонецЕсли; 
			КонецЦикла; 
		КонецЦикла; 
	КонецЕсли; 	
	//  Если курс не найден
	Для каждого Курс Из Курсы Цикл
		Если Курс = Неопределено Тогда
			Возврат Неопределено;
		КонецЕсли;
	КонецЦикла; 
	
	Точность = Метаданные.ОпределяемыеТипы.ДенежныйТип.Тип.КвалификаторыЧисла.РазрядностьДробнойЧасти;
	Сумма = Окр(Окр(Сумма * Курсы[0], Точность) / Курсы[1], Точность);
	Возврат Сумма; 
КонецФункции
 
&НаСервереБезКонтекста
Функция ПолучитьДоговорНаСервере(ЗаказИлиКонтрагент)
	Возврат РасчетыКлиентСервер.ПолучитьДоговорНаСервере(ЗаказИлиКонтрагент);
КонецФункции
 

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ВалютаЗаполнена = Ложь;
	ПересчетСуммыАктивен = Константы.ИспользоватьНесколькоВалют.Получить();
	Если ЗначениеЗаполнено(Объект.СчетОрганизации) Тогда
		ВалютаСуммы = ПолучитьВалютуПоСчетуОрганизацииНаСервере(Объект.СчетОрганизации);
		ВалютаЗаполнена = Истина;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Объект.РублеваяСумма) И 
		ЗначениеЗаполнено(Объект.ЗаказКлиента) Тогда
		
		Объект.РублеваяСумма = ПолучитьСуммуЗаказаНаСервере(Объект.ЗаказКлиента);
	КонецЕсли;
	Дата = Неопределено;
	Если КонецДня(Объект.Дата) = КонецДня(ТекущаяДата()) ИЛИ Не ЗначениеЗаполнено(Объект.Дата) Тогда
	    ПодсчетНаДатуДокумента = Ложь;
	    Элементы.ПодсчетНаДатуДокумента.Видимость = Ложь;
	Иначе
		ПодсчетНаДатуДокумента = Истина И ПересчетСуммыАктивен;
		Дата = Объект.Дата;
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.РублеваяСумма) Тогда
		Если ВалютаЗаполнена Тогда
			
			Сумма = ПересчитатьСуммуНаСервере(Объект.РублеваяСумма, ВалютаСуммы, Дата);
			Если Сумма = Неопределено Тогда
				ВалютаРубль = Справочники.Валюты.Рубль;
			 	Сообщить("Не определён курс Рубль-" 
			 		+ ВалютаСуммы 
			 		+ " для счета " 
			 		+ Объект.СчетОрганизации);
//  				ВалютаСуммы = ВалютаРубль;
		   	Иначе
		   		Если Не ЗначениеЗаполнено(Объект.ВалютнаяСумма) Тогда
					Объект.ВалютнаяСумма = Сумма;
				КонецЕсли; 	
			КонецЕсли; 
		КонецЕсли;
	КонецЕсли;  
КонецПроцедуры

&НаКлиенте
Процедура СуммаПриИзменении(Элемент)
	Валюты = Новый Массив(2);
	Валюты[0] = ВалютаСуммы;
	Валюты[1] = Неопределено;
	Дата = ?(ПодсчетНаДатуДокумента, Объект.Дата, Неопределено);
	Объект.РублеваяСумма = ПересчитатьСуммуНаСервере(Объект.ВалютнаяСумма, Валюты, Дата);
КонецПроцедуры
 

&НаКлиенте
Процедура ЗаказКлиентаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Объект.РублеваяСумма = ПолучитьСуммуЗаказаНаСервере(ВыбранноеЗначение);
	Дата = ?(ПодсчетНаДатуДокумента, Объект.Дата, Неопределено);
	Сумма = ПересчитатьСуммуНаСервере(Объект.РублеваяСумма, ВалютаСуммы, Дата);
	Если Сумма = Неопределено Тогда
		Сообщить("Не определён курс Рубль-" 
			+ ВалютаСуммы);
// 		ВыбранноеЗначение = Объект.ЗаказКлиента;
	Иначе
		Объект.ВалютнаяСумма = Сумма;
 		Объект.Договор = ПолучитьДоговорНаСервере(ВыбранноеЗначение);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СчётОрганизацииОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	НоваяВалюта = ПолучитьВалютуПоСчетуОрганизацииНаСервере(ВыбранноеЗначение);
	Если НоваяВалюта <> ВалютаСуммы Тогда
		Дата = ?(ПодсчетНаДатуДокумента, Объект.Дата, Неопределено);
		Сумма = ПересчитатьСуммуНаСервере(Объект.РублеваяСумма, НоваяВалюта, Дата);
		Если Сумма = Неопределено Тогда
			Сообщить("Не определён курс Рубль-" 
				+ НоваяВалюта 
				+ " для счета " 
				+ ВыбранноеЗначение);
			ВыбранноеЗначение = Объект.СчетОрганизации;
		Иначе
			Объект.ВалютнаяСумма = Сумма;
			ВалютаСуммы = НоваяВалюта;
		КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры
 
&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	Объект.Договор = ПолучитьДоговорНаСервере(Объект.Контрагент);
КонецПроцедуры



&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	Если КонецДня(Объект.Дата) <> КонецДня(ТекущаяДата()) Тогда
		ПодсчетНаДатуДокумента = Истина;
		Элементы.ПодсчетНаДатуДокумента.Видимость = Истина И ПересчетСуммыАктивен;
	Иначе
		ПодсчетНаДатуДокумента = Ложь;
		Элементы.ПодсчетНаДатуДокумента.Видимость = Ложь;
	КонецЕсли;
	ПересчитатьПоДате();
КонецПроцедуры


&НаКлиенте
Процедура ПодсчетНаДатуДокументаПриИзменении(Элемент)
	ПересчитатьПоДате();
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьПоДате()
	Дата = ?(ПодсчетНаДатуДокумента, Объект.Дата, Неопределено);
	Сумма = ПересчитатьСуммуНаСервере(Объект.РублеваяСумма, ВалютаСуммы, Дата);
	Если Сумма = Неопределено Тогда
		Сообщить("Не определён курс Рубль-" 
			+ ВалютаСуммы 
			+ " для счета " 
			+ Объект.СчетОрганизации
			+ " на дату "
			+ Объект.Дата);
	Иначе
		Объект.ВалютнаяСумма = Сумма;
	КонецЕсли;		
КонецПроцедуры
 
