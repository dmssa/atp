&НаСервереБезКонтекста
Функция ПолучитьЗначениеКонстантыРассчитыватьСтоимость()
	Возврат Константы.РассчитыватьСтоимостьАвтоматически.Получить();
КонецФункции

&НаСервереБезКонтекста
Функция ЦеныНаСервере(ОбновляемыеТовары, Дата)
	Цены           = Новый Массив();
	ДанныеОтбора   = Новый Структура();
	ДанныеРегистра = РегистрыСведений.ЦеныНоменклатуры.СрезПоследних(Дата, ДанныеОтбора);
	
	Для Каждого Товар Из ОбновляемыеТовары Цикл
		Строка = ДанныеРегистра.Найти(Товар, "Номенклатура");
		Если Строка = Неопределено Тогда
			Цены.Добавить(0);
		Иначе
			Цены.Добавить(Строка.Цена);
		КонецЕсли;
	КонецЦикла;
	Возврат Цены;
КонецФункции

&НаКлиенте
Процедура ОбновитьСтоимость(Товар)
	Если ПолучитьЗначениеКонстантыРассчитыватьСтоимость() Тогда
		Товар.Стоимость = Товар.ЦенаПоступления * Товар.Количество;
    КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ОбновитьВсеСтоимость()
	Если ПолучитьЗначениеКонстантыРассчитыватьСтоимость() Тогда
		Для Каждого Товар Из Объект.Товары Цикл
			ОбновитьСтоимость(Товар);
		КонецЦикла;
	Иначе 		
        Сообщить("Стоимость не рассчитывается!");
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЦенаНаСервере(Номенклатура, Дата)
    Запрос = Новый Запрос;
    Запрос.Текст = "ВЫБРАТЬ
                   |    ЦеныНоменклатурыСрезПоследних.Цена КАК Цена
                   |ИЗ
                   |    РегистрСведений.ЦеныНоменклатуры.СрезПоследних КАК ЦеныНоменклатурыСрезПоследних
                   |ГДЕ
                   |    ЦеныНоменклатурыСрезПоследних.Номенклатура = &Номенклатура
                   |    И ЦеныНоменклатурыСрезПоследних.ВидЦены.Наименование = &ВидЦены";
    Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
    Запрос.УстановитьПараметр("ВидЦены", "Закупочная");
    РезультатЗапроса = Запрос.Выполнить();
    
    Если Не РезультатЗапроса.Пустой() Тогда
    	Выборка = РезультатЗапроса.Выбрать();
        Выборка.Следующий();
        Возврат Выборка.Цена;
    КонецЕсли; 
    Возврат 0;
    //ДанныеОтбора = Новый Структура("Номенклатура", Номенклатура);
    //
    //ДанныеРегистра = РегистрыСведений.ЦеныНоменклатуры.СрезПоследних(Дата,ДанныеОтбора);
    //НужныйВидЦены = Справочники.ВидыЦен.НайтиПоНаименованию("Закупочная");
    //Для Каждого Строка Из ДанныеРегистра Цикл
    //	Если Строка.ВидЦены = НужныйВидЦены Тогда
    //		Возврат Строка.Цена;	
    //	КонецЕсли;		
    //КонецЦикла;
    //Возврат Неопределено;        
КонецФункции

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	Товар = Элементы.Товары.ТекущиеДанные;
	Товар.ЦенаПоступления = ЦенаНаСервере(Товар.Номенклатура, Объект.Дата);
	ОбновитьСтоимость(Товар);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	Если ПолучитьЗначениеКонстантыРассчитыватьСтоимость() Тогда
		Товар = Элементы.Товары.ТекущиеДанные;
		ОбновитьСтоимость(Товар);
	Иначе
		Сообщить("Стоимость не рассчитывается!");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаказПриИзмененииНаСервере(Дата)
	Заказ = Объект.Заказ;
	
	Объект.Поставщик = Заказ.Поставщик;	
	Объект.Склад	 = Заказ.Склад;
	
	Объект.Товары.Очистить();	
	
	Цены   = ЦеныНаСервере(Заказ.Товары.ВыгрузитьКолонку("Номенклатура"), Дата);
	Индекс = 0;
	Для Каждого Товар Из Заказ.Товары Цикл
		НоваяСтрока = Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Товар);
		НоваяСтрока.ЦенаПоступления = Цены[Индекс];
		Индекс = Индекс + 1;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЗаказПриИзменении(Элемент)
	ЗаказПриИзмененииНаСервере(Объект.Дата);
	ОбновитьВсеСтоимость();
КонецПроцедуры

&НаСервере
Процедура ДатаПриИзмененииНаСервере()
	Товары = Объект.Товары.Выгрузить().ВыгрузитьКолонку("Номенклатура");
	Цены   = ЦеныНаСервере(Товары, Объект.Дата);
	Индекс = 0;
	Для Каждого Товар Из Объект.Товары Цикл
		Товар.ЦенаПоступления = Цены[Индекс];
		Индекс = Индекс + 1;
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	ДатаПриИзмененииНаСервере();
	ОбновитьВсеСтоимость();
КонецПроцедуры


&НаКлиенте
Процедура ТоварыЦенаПоступленияПриИзменении(Элемент)
	Товар = Элементы.Товары.ТекущиеДанные;
	ОбновитьСтоимость(Товар)
КонецПроцедуры

