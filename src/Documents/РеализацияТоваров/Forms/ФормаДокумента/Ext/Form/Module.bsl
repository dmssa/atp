&НаСервереБезКонтекста
Функция ПолучитьЦены(ОбновляемыеТовары, Дата, ВидЦены, ДанныеОтбора = Неопределено) Экспорт

	Цены = Новый Массив();
	Если ДанныеОтбора = Неопределено Тогда
		ДанныеОтбора = Новый Структура()
	КонецЕсли;
	НужныйВидЦены = Справочники.ВидыЦен.НайтиПоНаименованию(ВидЦены);
	ДанныеОтбора.Вставить("ВидЦены", НужныйВидЦены);	
	
	ДанныеРегистра = РегистрыСведений.ЦеныНоменклатуры.СрезПоследних(Дата,ДанныеОтбора);
	
	Для Каждого Строка Из ОбновляемыеТовары Цикл
		Если ТипЗнч(Строка) <> Тип("СправочникСсылка.Номенклатура") Тогда
			Товар = Строка.Номенклатура;
		Иначе
			Товар = Строка;
		КонецЕсли;
		Строка = ДанныеРегистра.Найти(Товар, "Номенклатура");
		Если Строка <> Неопределено  Тогда
			Цены.Добавить(Строка.Цена);
		Иначе
			Цены.Добавить(0);
		КонецЕсли;
	КонецЦикла;
	Возврат Цены;
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ВидЦеныИзСклада(Склад) Экспорт
	Если ЗначениеЗаполнено(Склад) Тогда
		Если СтрЗаканчиваетсяНа(Склад,"ый") Тогда 
			НаименованиеВидаЦены = Лев(Склад, СтрДлина(Склад)-2);
			НаименованиеВидаЦены = НаименованиеВидаЦены + "ая";
		Иначе
			НаименованиеВидаЦены = "Розничная";
		КонецЕсли;
	Иначе
		НаименованиеВидаЦены = "Розничная";
	КонецЕсли;
	Возврат НаименованиеВидаЦены;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьЗначениеКонстантыРассчитыватьСтоимость()
	Возврат Константы.РассчитыватьСтоимостьАвтоматически.Получить();
КонецФункции

&НаКлиенте
Процедура ОбновитьСтоимость(Товар)
	Если ПолучитьЗначениеКонстантыРассчитыватьСтоимость() Тогда
        //Товар.Стоимость = Товар.ЦенаРеализации * Товар.Количество;
        Товар.Стоимость = РасчетыКлиентСервер.РассчитатьСтоимость(Товар.ЦенаРеализации, Товар.Количество);
    КонецЕсли;
КонецПроцедуры
 

&НаКлиенте
Процедура ОбновитьВсеСтоимость()
	Для Каждого Товар Из Объект.Товары Цикл
		ОбновитьСтоимость(Товар);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	Товар = Элементы.Товары.ТекущиеДанные;
	ОбновляемыеТовары = Новый Массив();
	ОбновляемыеТовары.Добавить(Товар.Номенклатура);
	ДанныеОтбора = Новый Структура();
	ДанныеОтбора.Вставить("Номенклатура", Товар.Номенклатура);
	
	Цены = ПолучитьЦены(ОбновляемыеТовары, Объект.Дата, ВидЦеныИзСклада(Объект.Склад), ДанныеОтбора);
	
	Товар.ЦенаРеализации = Цены[0];
	ОбновитьСтоимость(Товар);

КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	Товар = Элементы.Товары.ТекущиеДанные;
	ОбновитьСтоимость(Товар);
КонецПроцедуры

&НаСервере
Процедура ЗаказПриИзмененииНаСервере(Дата)
	Заказ = Объект.Заказ;
	
	Объект.Покупатель = Заказ.Покупатель;	
	Объект.Склад	  = Заказ.Склад;
	
	Объект.Товары.Очистить();
	Цены   = ПолучитьЦены(Заказ.Товары, Объект.Дата, ВидЦеныИзСклада(Объект.Склад));
	Индекс = 0;
	Для Каждого Товар Из Заказ.Товары Цикл 	
		НоваяСтрока = Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Товар);
		НоваяСтрока.ЦенаРеализации = Цены[Индекс];
		Индекс = Индекс + 1;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЗаказПриИзменении(Элемент)
	ЗаказПриИзмененииНаСервере(Объект.Дата);
	ОбновитьВсеСтоимость();
КонецПроцедуры


&НаКлиенте
Процедура ОбновитьЦеныТоваров()
	Товары = Объект.Товары;
	Цены   = ПолучитьЦены(Товары, Объект.Дата, ВидЦеныИзСклада(Объект.Склад));
	Индекс = 0;
	Для Каждого Товар Из Объект.Товары Цикл
		Если ЗначениеЗаполнено(Товар.Номенклатура) Тогда
			Товар.ЦенаРеализации = Цены[Индекс];
			ОбновитьСтоимость(Товар);
		КонецЕсли;
		Индекс = Индекс+1;
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура ТоварыЦенаРеализацииПриИзменении(Элемент)
	Товар = Элементы.Товары.ТекущиеДанные;
	ОбновитьСтоимость(Товар);
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	ОбновитьЦеныТоваров();
КонецПроцедуры

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	ОбновитьЦеныТоваров();
КонецПроцедуры


